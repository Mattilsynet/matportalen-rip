name: Build and publish Matportalen

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

concurrency: ci

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
      slack-message: ${{ steps.slack.outputs.message_id }}
    steps:
      - uses: actions/checkout@v3
      - name: Get deployment sha
        id: sha
        run: echo "sha=$(cut -c 1-10 <<< ${{ github.sha }})" >> $GITHUB_OUTPUT
      - uses: voxmedia/github-action-slack-notify-build@v1.6.0
        name: Notify build start
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        with:
          channel_id: C06192XRMNW
          status: Starter …
          color: warning

  build:
    runs-on: ubuntu-latest

    needs:
      - configure

    steps:
      - name: Notify build
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.6.0
        with:
          message_id: ${{ needs.configure.outputs.slack-message }}
          channel_id: C06192XRMNW
          status: Bygger docker image …
          color: warning
      - uses: actions/checkout@v3
      - name: Build docker image
        run: make docker
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: projects/799884623953/locations/global/workloadIdentityPools/gh-actions/providers/github
          service_account: artifacts-wi-sa-github-actions@artifacts-352708.iam.gserviceaccount.com
      - name: Log in to Google Artifact Registry (GAR)
        uses: docker/login-action@v1
        with:
          registry: europe-north1-docker.pkg.dev/artifacts-352708
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      - name: Notify publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.6.0
        with:
          message_id: ${{ needs.configure.outputs.slack-message }}
          channel_id: C06192XRMNW
          status: Publiserer docker image …
          color: warning
      - name: Publish docker image
        run: make publish

  deploy:
    runs-on: ubuntu-latest
    needs:
      - configure
      - build

    name: Deployer vha Cloud Run
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: projects/918179813166/locations/global/workloadIdentityPools/gh-actions/providers/github
          service_account: cloudrun-wi-sa-github-actions@matportalen-cafa.iam.gserviceaccount.com
      - name: Notify publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.6.0
        with:
          message_id: ${{ needs.configure.outputs.slack-message }}
          channel_id: C06192XRMNW
          status: Får reisverket på beina …
          color: warning
      - name: Deploying
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          project_id: matportalen-cafa
          region: europe-north1
          service: matportalen
          image: europe-north1-docker.pkg.dev/artifacts-352708/mat/matportalen:${{ needs.configure.outputs.sha }}

  notify-success:
    runs-on: ubuntu-latest

    needs:
      - configure
      - deploy

    if: success()

    steps:
      - name: Notify build & push success
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.6.0
        with:
          channel_id: C06192XRMNW
          message_id: ${{ needs.configure.outputs.slack-message }}
          status: Ferdig og relativt tilfreds
          color: good

  notify-failure:
    runs-on: ubuntu-latest

    needs:
      - configure
      - deploy

    if: failure()

    steps:
      - name: Notify failure
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.6.0
        with:
          channel_id: C06192XRMNW
          message_id: ${{ needs.configure.outputs.slack-message }}
          status: Ingen sigar!
          color: danger
